(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{267:function(e,a,t){e.exports=t.p+"assets/img/python_package_in_tap.b9558dd0.png"},289:function(e,a,t){"use strict";t.r(a);var n=t(13),s=Object(n.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"creating-an-opentap-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-an-opentap-plugin"}},[e._v("#")]),e._v(" Creating an OpenTAP plugin")]),e._v(" "),a("p",[e._v("Python development is done in modules (.py files) that reside in a Python package folder.\nEach module contains the code for one or more OpenTAP plugins.")]),e._v(" "),a("h2",{attrs:{id:"creating-a-basic-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-basic-plugin"}},[e._v("#")]),e._v(" Creating a Basic Plugin")]),e._v(" "),a("p",[e._v("In the following steps, "),a("em",[e._v("PythonExample")]),e._v(" refers to your project folder. Follow these steps to create a Python plugin:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Create Python modules for your plugins. To start from scratch, develop your code in a folder within "),a("strong",[e._v("%TAP_PATH%\\Packages\\")]),e._v(". To begin with the Python package build:")]),e._v(" "),a("p",[e._v("a. Go to $TAP_PATH/Packages/ and make a new folder with the desired plugin name. This has to be a valid Python module name.")])]),e._v(" "),a("li",[a("p",[e._v("Add a python file to your folder containing your code. For example:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Packages/MyPythonProject/step1.py")]),e._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" opentap\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Step1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("opentap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("TestStep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n         "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("__init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n         "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n         self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Step1 Executed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Test your plugin in OpenTAP and modify your code as needed. Rebuild the plugin if you add new types or properties to the plugin types.")])]),e._v(" "),a("li",[a("p",[e._v("When the package is complete and ready for distribution, you can create a .TapPackage file.")]),e._v(" "),a("p",[e._v("To do this, you need to add a package.xml file to the project.\nFor an example of this see the "),a("a",{attrs:{href:"https://raw.githubusercontent.com/opentap/OpenTap.Python/dev/OpenTap.Python.Examples/package.xml",target:"_blank",rel:"noopener noreferrer"}},[e._v("package.xml"),a("OutboundLink")],1),e._v(" used to build the PythonExamples project.")]),e._v(" "),a("p",[e._v("When you have the package.xml run:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('tap package create "Packages/MyPythonProject/package.xml\n')])])]),a("p",[e._v("This should result in a TapPackage file containing your python files, ready for distribution.")])])]),e._v(" "),a("p",[e._v("Your plugin package is complete and ready for distribution. When viewed in OpenTAP Package Manager, users will be able to see and install your package.")]),e._v(" "),a("p",[a("img",{attrs:{src:t(267),alt:""}})]),e._v(" "),a("h2",{attrs:{id:"adding-pip-package-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-pip-package-dependencies"}},[e._v("#")]),e._v(" Adding Pip Package Dependencies")]),e._v(" "),a("p",[e._v("The Python ecosystem has it's own package system for managing packages that you might need in your project.\nBy adding a requirements file, you can let the OpenTAP package system know that you need some pip packages installed\nas well as your OpenTap package.")]),e._v(" "),a("p",[e._v("For example numpy is a popular package for data processing.")]),e._v(" "),a("p",[e._v("Let's say we want to make sure that numpy is installed when our TapPackage is installed.")]),e._v(" "),a("ol",[a("li",[e._v("First create a "),a("code",[e._v("requirements.txt")]),e._v(" inside your plugin project. This could look like this"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("   numpy>1.23\n")])])])]),e._v(" "),a("li",[e._v("Add the requirements.txt file to your package.xml file:"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('\x3c!-- ... --\x3e\n<File Path="Packages/PythonExamples/requirements.txt">\n  <PythonRequirements/> \x3c!-- this defines pip dependencies --\x3e\n</File>\n\x3c!-- ... --\x3e\n')])])])]),e._v(" "),a("li",[e._v("Build your package as usual.")])]),e._v(" "),a("p",[e._v("When you install your package, the Pip dependencies will now also be installed in your python path.")])])}),[],!1,null,null,null);a.default=s.exports}}]);