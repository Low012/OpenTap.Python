variables:
  REPO_URL: 'http://packages.opentap.io'
  REPO_PLUGIN_DIR_NAME: 'Python'
  DOTNET_CLI_TELEMETRY_OPTOUT: '1'
stages:
  - build
  - test
  - publish

# This job builds the solution and captures the resulting *.TapPlugin as a build artifact
Build:
  stage: build
  image: opentapio/opentap:9.15-ubuntu18.04
  tags: [ docker, gce ]
  script: 
          - dotnet build -c Release
          - cp bin/Release/Python*.TapPackage .

  artifacts:
    expire_in: 1 week
    paths:
       - "*.TapPackage"

TestPackageUbuntuPy27:
  tags: [ docker, gce ]
  stage: test
  image: opentapio/opentap:9.15-ubuntu18.04
  dependencies: [Build]
  script: 
         - 'cp *.TapPackage Python.TapPackage'
         - tap package install ./Python.TapPackage
         - 'apt update'
         - 'apt install python2.7-dev -y'
         - tap python set-version 2.7
         - pushd /opt/tap
         - tap python build PluginExample --build-package -v
         - 'mkdir -p /opt/tap/Settings/Bench/Default'
         - 'cp -r /opt/tap/Packages/Python/Linux\ Sample\ Files/Settings /opt/tap'
         - 'tap run /opt/tap/Packages/Python/Linux\ Sample\ Files/Test\ Plans/Python27Example.TapPlan'

TestPackageUbuntuPy36:
  tags: [ docker, gce ]
  stage: test
  image: opentapio/opentap:9.15-ubuntu18.04
  dependencies: [Build]
  script: 
         - cp *.TapPackage Python.TapPackage
         - tap package install ./Python.TapPackage
         - apt update
         - apt install python3.6-dev -y
         - apt install python3.7-dev -y
         - export LD_LIBRARY_PATH=/usr/lib/python3.6/config-3.6m-x86_64-linux-gnu:/usr/lib/python3.7/config-3.7m-x86_64-linux-gnu
         - tap python set-version 3.6
         - pushd /opt/tap
         - tap python build PluginExample --build-package -v
         - mkdir -p /opt/tap/Settings/Bench/Default
         - 'cp -r /opt/tap/Packages/Python/Linux\ Sample\ Files/Settings /opt/tap'
         - 'tap run /opt/tap/Packages/Python/Linux\ Sample\ Files/Test\ Plans/Python3xExample.TapPlan'

TestPackageUbuntuPy37:
  tags: [ docker, gce ]
  stage: test
  image: opentapio/opentap:9.15-ubuntu18.04
  dependencies: [Build]
  script: 
         - cp *.TapPackage Python.TapPackage
         - tap package install ./Python.TapPackage
         - apt update
         - apt install python3.7-dev -y
         - tap python set-path /usr/lib/python3.7/config-3.7m-x86_64-linux-gnu
         - tap python set-version 3.7
         - pushd /opt/tap
         - tap python build PluginExample --build-package -v
         - mkdir -p /opt/tap/Settings/Bench/Default
         - 'cp -r /opt/tap/Packages/Python/Linux\ Sample\ Files/Settings /opt/tap'
         - 'tap run /opt/tap/Packages/Python/Linux\ Sample\ Files/Test\ Plans/Python3xExample.TapPlan'

# This job publishes the *.TapPlugin to the package repository
# This job does not run automatically but requires manual action from the developer
ManualPublishOpenTapIo:
  tags: [ docker, gce ]
  stage: publish
  when: manual
  image: opentapio/opentap:9.15-ubuntu18.04
  dependencies:
     - Build
  script: 
     - 'tap package install -f -v -r $REPO_URL "PackagePublish" --version 2'
     - 'tap package publish -v -p python -k $OPENTAP_REPO_SECRET_KEY -r packages.opentap.io *.TapPackage'

ManualPublishInternal:
  tags: [ docker, gce ]
  stage: publish
  when: manual
  image: opentapio/opentap:9.15-ubuntu18.04
  dependencies:
     - Build

  script: 
     - 'tap package install -f -v -r $REPO_URL "PackagePublish" --version 2'
     - 'tap package publish -v -p python -k $INTERNAL_REPO_SECRET_KEY -r packages.opentap.keysight.com *.TapPackage'
  
pages:
  stage: build
  image: node:9.11.1
  only:
    - master
  cache:
    paths:
      - node_modules/
  script:
    - cd Documentation
    - npm install
    - npm run build
  artifacts:
    paths:
      - public